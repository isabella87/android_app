package com.banhuitong.util;

import java.io.BufferedInputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.HttpURLConnection;
import java.net.URL;

import android.app.ProgressDialog;
import android.content.Context;
import android.os.Environment;
/**
 * 下载app
 * @author Administrator
 *
 */
public class DownLoadManager {
	public static File getFileFromServer(String path, ProgressDialog pd, Context ctx) throws IOException{

		if(Environment.getExternalStorageState().equals(Environment.MEDIA_MOUNTED)){
			URL url = new URL(path);
			HttpURLConnection conn =  (HttpURLConnection) url.openConnection();
			conn.setConnectTimeout(5000);
			//获取到文件的大小
			pd.setMax(conn.getContentLength());
			
			InputStream is = null;
			File file = null;
			FileOutputStream fos= null;
			BufferedInputStream bis= null;
			try {
				is = conn.getInputStream();
				
				file = new File(Environment.getExternalStorageDirectory(), "update.apk");		
				fos = new FileOutputStream(file);
				bis = new BufferedInputStream(is);
				byte[] buffer = new byte[1024];
				int len ;
				int total=0;
				while((len =bis.read(buffer))!=-1){
					fos.write(buffer, 0, len);
					total+= len;
					
					pd.setProgress(total);
				}
				fos.flush();
				return file;
			} catch (Exception e) {
				e.printStackTrace();
				return null;
			}finally{
				if(fos!=null)fos.close();
				if(bis!=null)bis.close();
				if(is!=null)is.close();
			}	
		}else{
			return null;
		}
	}
	
	public static void writeFile(InputStream in, OutputStream out){
		if(in!=null && out!=null){
			try {
				byte[] buffer = new byte[1024];
		        int ch;
		        while ((ch = in.read(buffer)) > 0) {
		        	out.write(buffer, 0, ch);
		        	out.flush();
		        }		
			} catch (IOException e) {
				e.printStackTrace();		
			}finally{
				try {
					in.close();
					out.close();
				} catch (IOException e) {
					e.printStackTrace();
				}			
			}		
		}	
	}  
}
